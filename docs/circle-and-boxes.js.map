{
  "version": 3,
  "sources": ["../src/examples/observeCanvasResize.ts", "../src/ECStore.ts", "../src/examples/circle-and-boxes.ts"],
  "sourcesContent": ["declare global {\n  interface ResizeObserverEntry {\n    devicePixelContentBoxSize: { inlineSize: number; blockSize: number }[];\n  }\n}\n\nexport default function observeCanvasResize(\n  canvas: HTMLCanvasElement,\n  callback: (size: { x: number; y: number }) => void,\n) {\n  const observer = new ResizeObserver((entries) => {\n    const entry = entries.find(($0) => $0.target === canvas);\n    if (!entry) return;\n    callback({ x: entry.devicePixelContentBoxSize[0].inlineSize, y: entry.devicePixelContentBoxSize[0].blockSize });\n  });\n  observer.observe(canvas, { box: ['device-pixel-content-box'] as unknown as ResizeObserverBoxOptions });\n}\n", "/* eslint-disable no-param-reassign,@typescript-eslint/no-non-null-assertion */\n\nexport default class ECStore<TEntity extends object & { id: string }> {\n  entities: Record<string, Partial<TEntity>>;\n\n  components: Record<keyof TEntity, Partial<TEntity>[]>;\n\n  constructor() {\n    this.components = {} as Record<keyof TEntity, Partial<TEntity>[]>;\n\n    const entitiesData: Record<string, TEntity> = {};\n    this.entities = new Proxy(entitiesData, {\n      get: (entities, id: string) => {\n        let entityProxy = entities[id];\n        if (!entityProxy) {\n          entityProxy = new Proxy({ id } as unknown as TEntity, {\n            set: (<Key extends keyof TEntity>(target: TEntity, key: Key, value: TEntity[Key]) => {\n              if (key === 'id') return false;\n              if (value === undefined) {\n                if (this.components[key]) {\n                  const index = this.components[key]!.indexOf(entityProxy);\n                  if (index !== -1) this.components[key]!.splice(index, 1);\n                }\n                delete target[key];\n              } else {\n                if (!this.components[key]) this.components[key] = [];\n                const index = this.components[key]!.indexOf(entityProxy);\n                if (index === -1) this.components[key]!.push(entityProxy);\n\n                target[key] = value;\n              }\n              return true;\n            }) as (target: TEntity, propertyKey: string | symbol, value: unknown, receiver: unknown) => boolean,\n            deleteProperty: (<Key extends keyof TEntity>(object: TEntity, key: Key) => {\n              if (this.components[key]) {\n                const index = this.components[key]!.indexOf(entityProxy);\n                if (index !== -1) this.components[key]!.splice(index, 1);\n              }\n              delete object[key];\n              return true;\n            }) as (target: TEntity, p: string | symbol) => boolean,\n          });\n\n          entities[id] = entityProxy;\n        }\n        return entityProxy;\n      },\n\n      set: (_, id: string, entity: Record<keyof TEntity, TEntity[keyof TEntity] | null>) => {\n        const entityProxy = this.entities[id];\n\n        Object.keys(entity).forEach(((key: keyof TEntity) => {\n          if (key === 'id') return;\n          const value = entity[key] as TEntity[keyof TEntity];\n          if (value === null) delete entityProxy[key];\n          else entityProxy[key] = value;\n        }) as ($0: string) => void);\n\n        return true;\n      },\n\n      deleteProperty: (entityData, id: string) => {\n        if (!(id in this.entities)) return false;\n        const entityDatum = entityData[id];\n        Object.keys(entityDatum).forEach((<Key extends keyof TEntity>(key: Key) => {\n          if (this.components[key]) {\n            const index = this.components[key]!.indexOf(entityDatum);\n            if (index !== -1) this.components[key]!.splice(index, 1);\n          }\n        }) as ($0: string) => void);\n        delete entityData[id];\n        return true;\n      },\n    });\n  }\n\n  addCount = 0;\n\n  add(...entities: Partial<TEntity>[]) {\n    const ids: string[] = [];\n    if (!entities.length) return ids;\n    if (entities.length === 1) {\n      const id = (entities[0] as unknown as { id: string }).id || `auto-generated ${this.addCount}`;\n      ids.push(id);\n      this.entities[id] = { ...entities[0] };\n    } else {\n      for (let i = 0; i < entities.length; i += 1) {\n        const id = (entities[i] as unknown as { id: string }).id || `auto-generated ${this.addCount}.${i}`;\n        ids.push(id);\n        this.entities[id] = { ...entities[i] };\n      }\n    }\n    this.addCount += 1;\n    return ids;\n  }\n\n  delete(...entities: Partial<TEntity>[]) {\n    const out: Partial<TEntity>[] = [];\n    for (let i = 0; i < entities.length; i += 1) {\n      out.push({ ...entities[i] });\n      const { id } = entities[i] as unknown as { id: string };\n      if (id && this.entities[id]) delete this.entities[id];\n    }\n    return out;\n  }\n}\n", "/* eslint-disable no-plusplus */\nimport observeCanvasResize from './observeCanvasResize';\nimport ECStore from '../ECStore';\n\nconst NUM_ELEMENTS = 5000;\nconst SPEED_MULTIPLIER = 0.1;\nconst SHAPE_SIZE = 20;\nconst SHAPE_HALF_SIZE = SHAPE_SIZE / 2;\n\n// Initialize canvas\nconst canvas = document.createElement('canvas');\ncanvas.style.cssText = 'width:100%;height:100%';\nobserveCanvasResize(canvas, (size) => Object.assign(canvas, { width: size.x, height: size.y }));\nconst ctx = canvas.getContext('2d');\nif (!ctx) throw new Error('canvas 2d context not initialized');\n\nconst root = document.getElementById('root');\nif (!root) throw new Error('element #root not found');\nroot.append(canvas);\n\n//----------------------\n// Components\n//----------------------\n\ninterface Entity {\n  id: string;\n  velocity: { x: number; y: number };\n  position: { x: number; y: number };\n  shape: string;\n  renderable: true;\n}\n\n//----------------------\n// Systems\n//----------------------\n\ntype System = (store: ECStore<Entity>, delta: number, time: number) => void;\n\n// MovableSystem\n\nconst MovableSystem: System = (store, delta) => {\n  // Define a query of entities that have \"Velocity\" and \"Position\" components\n  if (!store.components.velocity) return;\n  let i = store.components.velocity.length;\n  while (i--) {\n    const moving = store.components.velocity[i];\n    if (moving.position && moving.velocity) {\n      const { velocity, position } = moving;\n      position.x += velocity.x * delta;\n      position.y += velocity.y * delta;\n      if (position.x > canvas.width + SHAPE_HALF_SIZE) position.x = -SHAPE_HALF_SIZE;\n      if (position.x < -SHAPE_HALF_SIZE) position.x = canvas.width + SHAPE_HALF_SIZE;\n      if (position.y > canvas.height + SHAPE_HALF_SIZE) position.y = -SHAPE_HALF_SIZE;\n      if (position.y < -SHAPE_HALF_SIZE) position.y = canvas.height + SHAPE_HALF_SIZE;\n    }\n  }\n};\n\n// RendererSystem\n// This method will get called on every frame by default\nconst RendererSystem: System = (store) => {\n  const drawCircle = (position: { x: number; y: number }) => {\n    ctx.fillStyle = '#888';\n    ctx.beginPath();\n    ctx.arc(position.x, position.y, SHAPE_HALF_SIZE, 0, 2 * Math.PI, false);\n    ctx.fill();\n    ctx.lineWidth = 1;\n    ctx.strokeStyle = '#222';\n    ctx.stroke();\n  };\n\n  const drawBox = (position: { x: number; y: number }) => {\n    ctx.beginPath();\n    ctx.rect(position.x - SHAPE_HALF_SIZE, position.y - SHAPE_HALF_SIZE, SHAPE_SIZE, SHAPE_SIZE);\n    ctx.fillStyle = '#f28d89';\n    ctx.fill();\n    ctx.lineWidth = 1;\n    ctx.strokeStyle = '#800904';\n    ctx.stroke();\n  };\n\n  // ctx.globalAlpha = 0.6;\n  ctx.globalAlpha = 1;\n  ctx.fillStyle = '#ffffff';\n  ctx.fillRect(0, 0, canvas.width, canvas.height);\n\n  // Iterate through all the entities on the query\n  if (!store.components.renderable) return;\n  let i = store.components.renderable.length;\n  while (i--) {\n    const entity = store.components.renderable[i];\n    if (entity.shape && entity.position) {\n      const { shape, position } = entity;\n      if (shape === 'box') {\n        drawBox(position);\n      } else {\n        drawCircle(position);\n      }\n    }\n  }\n};\n\n// Create world and register the systems on it\nconst world = new ECStore<Entity>();\n\n// Some helper functions when creating the components\nfunction getRandomVelocity() {\n  return {\n    x: SPEED_MULTIPLIER * (2 * Math.random() - 1),\n    y: SPEED_MULTIPLIER * (2 * Math.random() - 1),\n  };\n}\n\nfunction getRandomPosition() {\n  return {\n    x: Math.random() * canvas.width,\n    y: Math.random() * canvas.height,\n  };\n}\n\nfunction getRandomShape() {\n  return Math.random() >= 0.5 ? 'circle' : 'box';\n}\n\nlet i = NUM_ELEMENTS;\nwhile (i--) {\n  world.add({\n    velocity: getRandomVelocity(),\n    shape: getRandomShape(),\n    position: getRandomPosition(),\n    renderable: true,\n  });\n}\n\nlet lastTime = performance.now();\n\n// Run!\nfunction run() {\n  // Compute delta and elapsed time\n  const time = performance.now();\n  const delta = time - lastTime;\n\n  // Run all the systems\n  MovableSystem(world, delta, time);\n  RendererSystem(world, delta, time);\n\n  lastTime = time;\n  requestAnimationFrame(run);\n}\n\nrun();\n"],
  "mappings": "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",
  "names": []
}
